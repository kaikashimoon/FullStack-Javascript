(()=>{var e={283:e=>{e.exports=class{constructor(){this.URI="http://localhost:5000/api/books"}async getBooks(){const e=await fetch(this.URI);return await e.json()}async postBook(e){const t=await fetch(this.URI,{method:"POST",body:e}),n=await t.json();console.log(n)}async deleteBook(e){const t=await fetch(`${this.URI}/${e}`,{headers:{"Content-Type":"application/json"},method:"Delete"}),n=await t.json();console.log(n)}}},280:(e,t,n)=>{"use strict";n.r(t)}},t={};function n(o){var a=t[o];if(void 0!==a)return a.exports;var r=t[o]={exports:{}};return e[o](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=n(283),t=n.n(e),o=["second","minute","hour","day","week","month","year"],a=["秒","分钟","小时","天","周","个月","年"],r={},s=function(e,t){r[e]=t},d=[60,60,24,7,365/7/12,12];function c(e){return e instanceof Date?e:!isNaN(e)||/^\d+$/.test(e)?new Date(parseInt(e)):(e=(e||"").trim().replace(/\.\d+/,"").replace(/-/,"/").replace(/-/,"/").replace(/(\d)T(\d)/,"$1 $2").replace(/Z/," UTC").replace(/([+-]\d\d):?(\d\d)/," $1$2"),new Date(e))}s("en_US",(function(e,t){if(0===t)return["just now","right now"];var n=o[Math.floor(t/2)];return e>1&&(n+="s"),[e+" "+n+" ago","in "+e+" "+n]})),s("zh_CN",(function(e,t){if(0===t)return["刚刚","片刻后"];var n=a[~~(t/2)];return[e+" "+n+"前",e+" "+n+"后"]}));const i=new(t()),l=class{async renderBooks(){const e=await i.getBooks(),t=document.getElementById("books-cards");t.innerHTML="",e.reverse().forEach((e=>{const n=document.createElement("div");var o,a,s,i;n.className="animated fadeInRight",n.innerHTML=`\n          <div class="card m-2">\n            <div class="row no-gutters">\n                <div class="col-md-4">\n                    <img src="http://localhost:5000${e.imagePath}" class="img-fluid" alt="">\n                </div>\n                <div class="col-md-8">\n                    <div class="card-block px-2">\n                        <h4 class="card-title text-muted">${e.title}<h4>\n                        <p class="card-text text-muted">${e.author}</p>\n                        <a href="#" class="btn btn-danger delete" _id="${e._id}">X</a>\n                    </div>\n                </div>\n            </div>\n            <div class="card-footer w-100 text-muted">\n              ${o=e.created_at,i=function(e,t){return(+(t?c(t):new Date)-+c(e))/1e3}(o,s&&s.relativeDate),function(e,t){for(var n=e<0?1:0,o=e=Math.abs(e),a=0;e>=d[a]&&a<d.length;a++)e/=d[a];return(e=Math.floor(e))>(0==(a*=2)?9:1)&&(a+=1),t(e,a,o)[n].replace("%s",e.toString())}(i,function(e){return r[e]||r.en_US}(a))}\n            </div>\n          </div>\n          `,t.appendChild(n)}))}async addNewBooks(e){await i.postBook(e),this.clearBookForm(),this.renderBooks()}async clearBookForm(){document.getElementById("book-form").reset()}async renderMessages(e,t,n){const o=document.createElement("div");o.className=`message ${t} mb-4 pl-2 p-2`,o.appendChild(document.createTextNode(e));const a=document.querySelector(".col-md-4"),r=document.querySelector("#book-form");a.insertBefore(o,r),setTimeout((()=>{document.querySelector(".message").remove()}),n)}async deleteBook(e){await i.deleteBook(e),this.renderBooks()}};n(280),document.addEventListener("DOMContentLoaded",(()=>{(new l).renderBooks()})),document.getElementById("book-form").addEventListener("submit",(e=>{const t=document.getElementById("title").value,n=document.getElementById("author").value,o=document.getElementById("isbn").value,a=document.getElementById("image").files,r=new FormData;r.append("image",a[0]),r.append("title",t),r.append("author",n),r.append("isbn",o);const s=new l;s.addNewBooks(r),s.renderMessages("New Book Added","bg-success text-white",3e3),e.preventDefault()})),document.getElementById("books-cards").addEventListener("click",(e=>{if(e.target.classList.contains("delete")){const t=new l;t.deleteBook(e.target.getAttribute("_id")),t.renderMessages("Book Removed","bg-danger text-white",3e3)}e.preventDefault()}))})()})();
//# sourceMappingURL=bundle.js.map